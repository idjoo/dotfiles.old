#!/usr/bin/env bash

#
# ██╗  ██╗███████╗██████╗ ██████╗ ███████╗████████╗██╗     ██╗   ██╗███████╗████████╗██╗    ██╗███╗   ███╗
# ██║  ██║██╔════╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝██║     ██║   ██║██╔════╝╚══██╔══╝██║    ██║████╗ ████║
# ███████║█████╗  ██████╔╝██████╔╝███████╗   ██║   ██║     ██║   ██║█████╗     ██║   ██║ █╗ ██║██╔████╔██║
# ██╔══██║██╔══╝  ██╔══██╗██╔══██╗╚════██║   ██║   ██║     ██║   ██║██╔══╝     ██║   ██║███╗██║██║╚██╔╝██║
# ██║  ██║███████╗██║  ██║██████╔╝███████║   ██║   ███████╗╚██████╔╝██║        ██║   ╚███╔███╔╝██║ ╚═╝ ██║
# ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝   ╚═╝   ╚══════╝ ╚═════╝ ╚═╝        ╚═╝    ╚══╝╚══╝ ╚═╝     ╚═╝
#

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# color
# col_gray1='#222222'
# col_gray2='#444444'
# col_gray3='#bbbbbb'
# col_gray4='#eeeeee'
# col_green='#758f55'

# variables
wallpaper=~/Pictures/.wallpaper/wallpaper.png

xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4
Alt=Mod1

hc keybind "$Mod"-Shift-q quit
hc keybind "$Mod"-Shift-r reload
hc keybind "$Mod"-w close
hc keybind "$Mod"-Return spawn "${TERMINAL:-wezterm}"

# xf86
hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10
hc keybind XF86AudioMute spawn pamixer --toggle-mute
hc keybind XF86AudioRaiseVolume spawn pamixer --increase 5
hc keybind XF86AudioLowerVolume spawn pamixer --decrease 5

hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPrev spawn playerctl previous

hc keybind XF86Launch1 spawn rofi -show calc -modi calc -no-show-match -no-sort -calc-command "echo -n '{result}' | xsel --clipboard"
hc keybind Print spawn flameshot gui
hc keybind Control-Print spawn color-picker
hc keybind "$Mod"-d spawn rofi -show drun
hc keybind "$Mod"-p spawn rofi-pass
hc keybind "$Mod"-a spawn ani-cli --rofi --skip
hc keybind "$Mod"-b spawn rofi-bluetooth
hc keybind "$Mod"-e spawn rofi -show emoji -modi emoji

hc keybind "$Mod"-Print spawn screencast
hc keybind "$Alt"-Print spawn screencast -s
hc keybind "$Mod"-backslash spawn screencast-stop

# lock screen
hc keybind "$Alt"-Shift-l spawn betterlockscreen --lock

# basic movement in tiling and floating mode
# focusing clients
hc keybind "$Mod"-h focus left
hc keybind "$Mod"-j focus down
hc keybind "$Mod"-k focus up
hc keybind "$Mod"-l focus right

# moving clients in tiling and floating mode
hc keybind "$Mod"-Shift-h shift left
hc keybind "$Mod"-Shift-j shift down
hc keybind "$Mod"-Shift-k shift up
hc keybind "$Mod"-Shift-l shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind "$Mod"-u split bottom 0.5
hc keybind "$Mod"-o split right 0.5
# let the current frame explode into subframes
hc keybind "$Mod"-Control-space split explode

# resizing frames and floating clients
resizestep=0.01
hc keybind "$Alt"-h resize left +"$resizestep"
hc keybind "$Alt"-j resize down +"$resizestep"
hc keybind "$Alt"-k resize up +"$resizestep"
hc keybind "$Alt"-l resize right +"$resizestep"

# tags
tag_names=({1..9})
tag_keys=({1..9} 0)

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}"; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ "$key" != "" ]; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind "$Mod"-period use_index +1 --skip-visible
hc keybind "$Mod"-comma use_index -1 --skip-visible
hc keybind "$Alt"-Tab use_previous

# layouting
hc keybind "$Mod"-r remove
hc keybind "$Mod"-s floating toggle
hc keybind "$Mod"-f set_attr clients.focus.floating toggle
hc keybind "$Mod"-Shift-f fullscreen toggle
# hc keybind "$Mod"-p pseudotile toggle
hc keybind "$Mod"-m set_attr clients.focus.minimized true
hc keybind "$Mod"-Shift-m \
    substitute FOCUS "tags.focus.name" \
    foreach CLIENT clients. \
    sprintf MINATT "%c.minimized" CLIENT \
    sprintf TAGATT "%c.tag" CLIENT and \
    , compare MINATT "=" "true" \
    , compare TAGATT "=" FOCUS \
    , set_attr MINATT false

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind "$Mod"-space \
    or , and . compare tags.focus.curframe_wcount = 2 \
    . cycle_layout +1 grid max \
    , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind "$Mod"-Button1 move
hc mousebind "$Mod"-Button2 zoom
hc mousebind "$Mod"-Button3 resize

# focus
hc keybind "$Mod"-BackSpace cycle_monitor
hc keybind "$Mod"-Tab cycle_all +1
hc keybind "$Mod"-Shift-Tab cycle_all -1
hc keybind "$Mod"-c cycle
hc keybind "$Mod"-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 0

hc attr theme.title_height 0
# hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
# # hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 0 # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#345F0C'
hc attr theme.title_color '#000000'
hc attr theme.normal.color '#4c594c'
hc attr theme.urgent.color '#7811A1'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal; do
    hc substitute C theme."$state".inner_color \
        attr theme."$state".outer_color C
done
hc attr theme.active.outer_width 1
# hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on

# telegram
hc rule class=TelegramDesktop tag=7

# whatsapp
hc rule class~'^whatsapp-nativefier.*' tag=7

# f5
hc rule class=f5vpn tag=8

# citrix
hc rule class=selfservice tag=8
hc rule class=Selfservice tag=8
hc rule class=Wfica tag=8
hc rule class=PrimaryAuthManager tag=8 floating=on floatplacement=center

# wine n shit
hc rule class=control.exe floating=on
hc rule class=explorer.exe floating=on
# hc rule class=line.exe floating=on
hc rule class=taskmgr.exe floating=on
hc rule class=winecfg.exe floating=on

# discord
hc rule class=discord tag=6

# firefox
hc rule class=firefox tag=9
hc rule class=firefox instance=Places floating=on
hc rule class=firefox title~'^Mozilla Firefox .*' \
    floating=on floatplacement=center

# chrome
hc rule class=Google-chrome tag=9

# qutebrowser
hc rule class=qutebrowser tag=9

# tlauncher
hc rule class=org-tlauncher-tlauncher-rmo-TLauncher floating=on

# zoom
hc rule class=zoom tag=8 pseudotile=on

# floating for fixed size
hc rule fixedsize floating=on

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on floatplacement=center
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

hc set default_frame_layout grid
hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
xrandr --output VGA1 --auto --right-of LVDS1 --output LVDS1 --auto
hc detect_monitors

feh --no-fehbg --bg-fill "$wallpaper"

panel=$HOME/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1); do
    "$panel" "$monitor" &
done

compositor=$HOME/.config/herbstluftwm/compositor.sh
"$compositor" &
